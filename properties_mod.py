import numpy as np
from mmath_mod import mon_interp2
from scipy.optimize import newton


def air_prop(nom, T):
    # prop = air_prop(nom,T)
    # choix de nom  'rho','Cp','mu','nu','k','al','Pr'
    # T = temperature  (temperature en Kelvin)

    air = np.array([[100.000000, 3.556200, 1.032000, 71.100000, 2.000000, 9.340000, 2.540000, 0.786000],
                    [150.000000, 2.336400, 1.012000, 103.400000, 4.426000, 13.800000, 5.840000, 0.758000],
                    [200.000000, 1.745800, 1.007000, 132.500000, 7.590000, 18.100000, 10.300000, 0.737000],
                    [250.000000, 1.394700, 1.006000, 159.600000, 11.440000, 22.300000, 15.900000, 0.720000],
                    [300.000000, 1.161400, 1.007000, 184.600000, 15.890000, 26.300000, 22.500000, 0.707000],
                    [350.000000, 0.995000, 1.009000, 208.200000, 20.920000, 30.000000, 29.900000, 0.700000],
                    [400.000000, 0.871100, 1.014000, 230.100000, 26.410000, 33.800000, 38.300000, 0.690000],
                    [450.000000, 0.774000, 1.021000, 250.700000, 32.390000, 37.300000, 47.200000, 0.686000],
                    [500.000000, 0.696400, 1.030000, 270.100000, 38.790000, 40.700000, 56.700000, 0.684000],
                    [550.000000, 0.632900, 1.040000, 288.400000, 45.570000, 43.900000, 66.700000, 0.683000],
                    [600.000000, 0.580400, 1.051000, 305.800000, 52.690000, 46.900000, 76.900000, 0.685000],
                    [650.000000, 0.535600, 1.063000, 322.500000, 60.210000, 49.700000, 87.300000, 0.690000],
                    [700.000000, 0.497500, 1.075000, 338.800000, 68.100000, 52.400000, 98.000000, 0.695000],
                    [750.000000, 0.464300, 1.087000, 354.600000, 76.370000, 54.900000, 109.000000, 0.702000],
                    [800.000000, 0.435400, 1.099000, 369.800000, 84.930000, 57.300000, 120.000000, 0.709000],
                    [850.000000, 0.409700, 1.110000, 384.300000, 93.800000, 59.600000, 131.000000, 0.716000],
                    [900.000000, 0.386800, 1.121000, 398.100000, 102.900000, 62.000000, 143.000000, 0.720000],
                    [950.000000, 0.366600, 1.131000, 411.300000, 112.200000, 64.300000, 155.000000, 0.723000],
                    [1000.000000, 0.348200, 1.141000, 424.400000, 121.900000, 66.700000, 168.000000, 0.726000],
                    [1100.000000, 0.316600, 1.159000, 449.000000, 141.800000, 71.500000, 195.000000, 0.728000],
                    [1200.000000, 0.290200, 1.175000, 473.000000, 162.900000, 76.300000, 224.000000, 0.728000],
                    [1300.000000, 0.267900, 1.189000, 496.000000, 185.100000, 82.000000, 238.000000, 0.719000],
                    [1400.000000, 0.248800, 1.207000, 530.000000, 213.000000, 91.000000, 303.000000, 0.703000],
                    [1500.000000, 0.232200, 1.230000, 557.000000, 240.000000, 100.000000, 350.000000, 0.685000],
                    [1600.000000, 0.217700, 1.248000, 584.000000, 268.000000, 106.000000, 390.000000, 0.688000],
                    [1700.000000, 0.204900, 1.267000, 611.000000, 298.000000, 113.000000, 435.000000, 0.685000],
                    [1800.000000, 0.193500, 1.286000, 637.000000, 329.000000, 120.000000, 482.000000, 0.683000],
                    [1900.000000, 0.183300, 1.307000, 663.000000, 362.000000, 128.000000, 534.000000, 0.677000],
                    [2000.000000, 0.174100, 1.337000, 689.000000, 396.000000, 137.000000, 589.000000, 0.672000],
                    [2100.000000, 0.165800, 1.372000, 715.000000, 431.000000, 147.000000, 646.000000, 0.667000],
                    [2200.000000, 0.158200, 1.417000, 740.000000, 468.000000, 160.000000, 714.000000, 0.655000],
                    [2300.000000, 0.151300, 1.478000, 766.000000, 506.000000, 175.000000, 783.000000, 0.647000],
                    [2400.000000, 0.144800, 1.558000, 792.000000, 547.000000, 196.000000, 869.000000, 0.630000],
                    [2500.000000, 0.138900, 1.665000, 818.000000, 589.000000, 222.000000, 960.000000, 0.613000],
                    [3000.000000, 0.113500, 2.726000, 955.000000, 841.000000, 486.000000, 1570.000000, 0.536000], ])

    label = ['temp', 'rho', 'Cp', 'mu', 'nu', 'k', 'al', 'Pr']
    i = label.index(nom)
    y = air[:, i]
    x = air[:, 0]
    Tmin = x[0]
    Tmax = x[x.size - 1]
    if T < Tmin or T > Tmax:
        print('Warning : La valeur de T est en dehors de la table : extrapolation !')
    p = np.interp(T, x, y)

    if nom == 'mu':
        p = p * 10 ** -7
    elif nom == 'nu':
        p = p * 10 ** -6
    elif nom == 'k':
        p = p * 10 ** -3
    elif nom == 'al':
        p = p * 10 ** -6
    elif nom == 'Cp':
        p = p * 10 ** 3
    return p


def eau_prop(nom, T):
    # prop = eau_prop(nom,T)
    # choix de nom  'temp','pres','vf','vg','hfg','Cpf','Cpg','muf','mug','kf','kg','Prf','Prg','st','betaf'
    # 		si nom ~= temp, T = temperature  (temperature en Kelvin)
    #		si nom == temp  T = pression  (pression en bar 10e5 Pa)

    eau = np.array([[273.130000, 0.006110, 1.000000, 206.300000, 2502.000000, 4.217000, 1.854000, 1750.000000, 8.020000,
                     569.000000, 18.200000, 12.990000, 0.815000, 75.500000, -68.050000],
                    [275.000000, 0.006970, 1.000000, 181.700000, 2497.000000, 4.211000, 1.855000, 1652.000000, 8.090000,
                     574.000000, 18.300000, 12.220000, 0.817000, 75.300000, -32.740000],
                    [280.000000, 0.009900, 1.000000, 130.400000, 2485.000000, 4.198000, 1.858000, 1422.000000, 8.290000,
                     582.000000, 18.600000, 10.260000, 0.825000, 74.800000, 46.040000],
                    [285.000000, 0.013870, 1.000000, 99.400000, 2473.000000, 4.189000, 1.861000, 1225.000000, 8.490000,
                     590.000000, 18.900000, 8.810000, 0.833000, 74.300000, 114.100000],
                    [290.000000, 0.019170, 1.001000, 69.700000, 2461.000000, 4.184000, 1.864000, 1080.000000, 8.690000,
                     598.000000, 19.300000, 7.560000, 0.841000, 73.700000, 174.000000],
                    [295.000000, 0.026170, 1.002000, 51.940000, 2449.000000, 4.181000, 1.868000, 959.000000, 8.890000,
                     606.000000, 19.500000, 6.620000, 0.849000, 72.700000, 227.500000],
                    [300.000000, 0.035310, 1.003000, 39.130000, 2438.000000, 4.179000, 1.872000, 855.000000, 9.090000,
                     613.000000, 19.600000, 5.830000, 0.857000, 71.700000, 276.100000],
                    [305.000000, 0.047120, 1.005000, 29.740000, 2426.000000, 4.178000, 1.877000, 769.000000, 9.290000,
                     620.000000, 20.100000, 5.200000, 0.865000, 70.900000, 320.600000],
                    [310.000000, 0.062210, 1.007000, 22.930000, 2414.000000, 4.178000, 1.882000, 695.000000, 9.490000,
                     628.000000, 20.400000, 4.620000, 0.873000, 70.000000, 361.900000],
                    [315.000000, 0.081320, 1.009000, 17.820000, 2402.000000, 4.179000, 1.888000, 631.000000, 9.690000,
                     634.000000, 20.700000, 4.160000, 0.883000, 69.200000, 400.400000],
                    [320.000000, 0.105300, 1.011000, 13.980000, 2390.000000, 4.180000, 1.895000, 577.000000, 9.890000,
                     640.000000, 21.000000, 3.770000, 0.894000, 68.300000, 436.700000],
                    [325.000000, 0.135100, 1.013000, 11.060000, 2378.000000, 4.182000, 1.903000, 528.000000, 10.090000,
                     645.000000, 21.300000, 3.420000, 0.901000, 67.500000, 471.200000],
                    [330.000000, 0.171900, 1.016000, 8.820000, 2366.000000, 4.194000, 1.911000, 489.000000, 10.290000,
                     650.000000, 21.700000, 3.150000, 0.908000, 66.600000, 504.000000],
                    [335.000000, 0.216700, 1.018000, 7.090000, 2354.000000, 4.186000, 1.920000, 453.000000, 10.490000,
                     656.000000, 22.000000, 2.880000, 0.916000, 65.800000, 535.500000],
                    [340.000000, 0.271300, 1.021000, 5.740000, 2342.000000, 4.188000, 1.930000, 420.000000, 10.690000,
                     660.000000, 22.300000, 2.660000, 0.925000, 64.900000, 566.000000],
                    [345.000000, 0.337200, 1.024000, 4.683000, 2329.000000, 4.191000, 1.941000, 389.000000, 10.890000,
                     668.000000, 22.600000, 2.450000, 0.933000, 64.100000, 595.400000],
                    [350.000000, 0.416300, 1.027000, 3.846000, 2317.000000, 4.195000, 1.954000, 365.000000, 11.090000,
                     668.000000, 23.000000, 2.290000, 0.942000, 63.200000, 624.200000],
                    [355.000000, 0.510000, 1.030000, 3.180000, 2304.000000, 4.199000, 1.968000, 343.000000, 11.290000,
                     671.000000, 23.300000, 2.140000, 0.951000, 62.300000, 652.300000],
                    [360.000000, 0.620900, 1.034000, 2.645000, 2291.000000, 4.203000, 1.983000, 324.000000, 11.490000,
                     674.000000, 23.700000, 2.020000, 0.960000, 61.400000, 697.900000],
                    [365.000000, 0.751400, 1.038000, 2.212000, 2278.000000, 4.209000, 1.999000, 306.000000, 11.690000,
                     677.000000, 24.100000, 1.910000, 0.969000, 60.500000, 707.100000],
                    [370.000000, 0.904000, 1.041000, 1.961000, 2265.000000, 4.214000, 2.017000, 289.000000, 11.890000,
                     679.000000, 24.500000, 1.800000, 0.978000, 59.500000, 728.700000],
                    [373.150000, 1.013300, 1.044000, 1.679000, 2257.000000, 4.217000, 2.029000, 279.000000, 12.020000,
                     680.000000, 24.800000, 1.760000, 0.994000, 58.900000, 750.100000],
                    [375.000000, 1.081500, 1.045000, 1.574000, 2252.000000, 4.220000, 2.036000, 274.000000, 12.090000,
                     681.000000, 24.900000, 1.700000, 0.987000, 58.600000, 761.000000],
                    [380.000000, 1.286900, 1.049000, 1.337000, 2239.000000, 4.226000, 2.057000, 260.000000, 12.290000,
                     683.000000, 25.400000, 1.610000, 0.999000, 57.600000, 798.000000],
                    [385.000000, 1.523300, 1.053000, 1.142000, 2225.000000, 4.232000, 2.080000, 248.000000, 12.490000,
                     685.000000, 25.800000, 1.530000, 1.004000, 56.600000, 814.000000],
                    [390.000000, 1.794000, 1.058000, 0.980000, 2212.000000, 4.239000, 2.104000, 237.000000, 12.690000,
                     686.000000, 26.300000, 1.470000, 1.013000, 55.600000, 841.000000],
                    [400.000000, 2.455000, 1.067000, 0.731000, 2183.000000, 4.256000, 2.158000, 217.000000, 13.050000,
                     688.000000, 27.200000, 1.340000, 1.033000, 53.600000, 896.000000],
                    [410.000000, 3.302000, 1.077000, 0.553000, 2153.000000, 4.278000, 2.221000, 200.000000, 13.420000,
                     688.000000, 28.200000, 1.240000, 1.054000, 51.500000, 952.000000],
                    [420.000000, 4.370000, 1.088000, 0.425000, 2123.000000, 4.302000, 2.291000, 185.000000, 13.790000,
                     688.000000, 29.800000, 1.160000, 1.075000, 49.400000, 1010.000000],
                    [430.000000, 5.699000, 1.099000, 0.331000, 2091.000000, 4.331000, 2.369000, 173.000000, 14.140000,
                     685.000000, 30.400000, 1.090000, 1.100000, 47.200000, 0.000000],
                    [440.000000, 7.333000, 1.110000, 0.261000, 2059.000000, 4.360000, 2.460000, 162.000000, 14.500000,
                     682.000000, 31.700000, 1.040000, 1.120000, 45.100000, 0.000000],
                    [450.000000, 9.319000, 1.123000, 0.208000, 2024.000000, 4.400000, 2.560000, 152.000000, 14.850000,
                     678.000000, 33.100000, 0.990000, 1.140000, 42.900000, 0.000000],
                    [460.000000, 11.710000, 1.137000, 0.167000, 1989.000000, 4.440000, 2.680000, 143.000000, 15.190000,
                     673.000000, 34.600000, 0.950000, 1.170000, 40.700000, 0.000000],
                    [470.000000, 14.550000, 1.152000, 0.136000, 1951.000000, 4.480000, 2.790000, 136.000000, 15.540000,
                     667.000000, 36.300000, 0.920000, 1.200000, 38.500000, 0.000000],
                    [480.000000, 17.900000, 1.167000, 0.111000, 1912.000000, 4.530000, 2.940000, 129.000000, 15.880000,
                     660.000000, 38.100000, 0.890000, 1.230000, 36.200000, 0.000000],
                    [490.000000, 21.830000, 1.184000, 0.092200, 1870.000000, 4.590000, 3.100000, 124.000000, 16.230000,
                     651.000000, 40.100000, 0.870000, 1.250000, 33.900000, 0.000000],
                    [500.000000, 26.400000, 1.203000, 0.076600, 1825.000000, 4.660000, 3.270000, 118.000000, 16.590000,
                     642.000000, 42.300000, 0.860000, 1.280000, 31.600000, 0.000000],
                    [510.000000, 31.660000, 1.222000, 0.063100, 1779.000000, 4.740000, 3.470000, 113.000000, 16.950000,
                     631.000000, 44.700000, 0.850000, 1.310000, 29.300000, 0.000000],
                    [520.000000, 37.700000, 1.244000, 0.052500, 1730.000000, 4.840000, 3.700000, 108.000000, 17.330000,
                     621.000000, 47.500000, 0.840000, 1.350000, 26.900000, 0.000000],
                    [530.000000, 44.580000, 1.268000, 0.044500, 1679.000000, 4.950000, 3.960000, 104.000000, 17.720000,
                     608.000000, 50.600000, 0.850000, 1.390000, 24.500000, 0.000000],
                    [540.000000, 52.380000, 1.294000, 0.037500, 1622.000000, 5.080000, 4.270000, 101.000000, 18.100000,
                     594.000000, 54.000000, 0.860000, 1.430000, 22.100000, 0.000000],
                    [550.000000, 61.190000, 1.323000, 0.031700, 1564.000000, 5.240000, 4.640000, 97.000000, 18.600000,
                     580.000000, 58.300000, 0.870000, 1.470000, 19.700000, 0.000000],
                    [560.000000, 71.080000, 1.355000, 0.026900, 1499.000000, 5.430000, 5.090000, 94.000000, 19.100000,
                     563.000000, 63.700000, 0.900000, 1.520000, 17.300000, 0.000000],
                    [570.000000, 82.160000, 1.392000, 0.022800, 1429.000000, 5.680000, 5.670000, 91.000000, 19.700000,
                     548.000000, 76.700000, 0.940000, 1.590000, 15.000000, 0.000000],
                    [580.000000, 94.510000, 1.433000, 0.019300, 1353.000000, 6.000000, 6.400000, 88.000000, 20.400000,
                     528.000000, 76.700000, 0.990000, 1.680000, 12.800000, 0.000000],
                    [590.000000, 108.300000, 1.482000, 0.016300, 1274.000000, 6.410000, 7.350000, 84.000000, 21.500000,
                     513.000000, 84.100000, 1.050000, 1.840000, 10.500000, 0.000000],
                    [600.000000, 123.500000, 1.541000, 0.013700, 1176.000000, 7.000000, 8.750000, 81.000000, 22.700000,
                     497.000000, 92.900000, 1.140000, 2.150000, 8.400000, 0.000000],
                    [610.000000, 137.300000, 1.612000, 0.011500, 1068.000000, 7.850000, 11.100000, 77.000000, 24.100000,
                     467.000000, 103.000000, 1.300000, 2.600000, 6.300000, 0.000000],
                    [620.000000, 159.100000, 1.705000, 0.009400, 941.000000, 9.350000, 15.400000, 72.000000, 25.900000,
                     444.000000, 114.000000, 1.520000, 3.460000, 4.500000, 0.000000],
                    [625.000000, 169.100000, 1.778000, 0.008500, 858.000000, 10.600000, 18.300000, 70.000000, 27.000000,
                     430.000000, 121.000000, 1.650000, 4.200000, 3.500000, 0.000000],
                    [630.000000, 179.700000, 1.856000, 0.007500, 781.000000, 12.600000, 22.100000, 67.000000, 28.000000,
                     412.000000, 130.000000, 2.000000, 4.800000, 2.600000, 0.000000],
                    [635.000000, 190.900000, 1.935000, 0.006600, 683.000000, 16.400000, 27.600000, 64.000000, 30.000000,
                     392.000000, 141.000000, 2.700000, 6.000000, 1.500000, 0.000000],
                    [640.000000, 202.700000, 2.075000, 0.005700, 560.000000, 26.000000, 42.000000, 59.000000, 32.000000,
                     367.000000, 155.000000, 4.200000, 9.600000, 0.800000, 0.000000],
                    [645.000000, 215.200000, 2.351000, 0.004500, 361.000000, 90.000000, 0.000000, 54.000000, 37.000000,
                     331.000000, 178.000000, 12.000000, 26.000000, 0.100000, 0.000000],
                    [647.300000, 221.200000, 3.170000, 0.003200, 0.000000, 100000000000000000000.000000,
                     100000000000000000000.000000, 45.000000, 45.000000, 238.000000, 238.000000,
                     100000000000000000000.000000, 100000000000000000000.000000, 0.000000, 0.000000]])

    label = ['temp', 'pres', 'vf', 'vg', 'hfg', 'Cpf', 'Cpg', 'muf', 'mug', 'kf', 'kg', 'Prf', 'Prg', 'st', 'betaf']
    i = label.index(nom)
    y = eau[:, i]
    x = eau[:, 0]
    Tmin = x[0]
    Tmax = x[x.size - 1]
    if T < Tmin or T > Tmax:
        print('Warning : La valeur de T est en dehors de la table : extrapolation !')
    p = np.interp(T, x, y)

    if nom == 'temp':
        y = eau[:, 0]
        x = eau[:, 1]
        pmin = x[0]
        pmax = x[x.size - 1]
        if T < pmin or T > pmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = np.interp(T, x, y)
    elif (nom == 'muf') | (nom == 'mug'):
        i = label.index(nom)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = np.interp(T, x, y)
        p = p * 10 ** -6
    elif nom == 'nuf':
        nom1 = 'muf'
        i = label.index(nom1)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = np.interp(T, x, y)
        nom2 = 'vf'
        i = label.index(nom2)
        y = eau[:, i]
        p2 = np.interp(T, x, y)
        p = p1 * p2 * 10 ** -9
    elif nom == 'nug':
        nom1 = 'mug'
        i = label.index(nom1)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = np.interp(T, x, y)
        nom2 = 'vg'
        i = label.index(nom2)
        y = eau[:, i]
        p2 = np.interp(T, x, y)
        p = p1 * p2 * 10 ** -6
    elif nom == 'alg':
        nom1 = 'kg'
        i = label.index(nom1)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = np.interp(T, x, y)
        nom2 = 'vg'
        i = label.index(nom2)
        y = eau[:, i]
        p2 = np.interp(T, x, y)
        nom3 = 'Cpg'
        i = label.index(nom2)
        y = eau[:, i]
        p3 = np.interp(T, x, y)
        p = (p1 * p2 / p3) * 10 ** -6
    elif nom == 'alf':
        nom1 = 'kf'
        i = label.index(nom1)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = np.interp(T, x, y)
        nom2 = 'vf'
        i = label.index(nom2)
        y = eau[:, i]
        p2 = np.interp(T, x, y)
        nom3 = 'Cpf'
        i = label.index(nom3)
        y = eau[:, i]
        p3 = np.interp(T, x, y)
        p = (p1 * p2 / p3) * 10 ** -9
    elif (nom == 'kf') | (nom == 'kg') | (nom == 'st'):
        i = label.index(nom)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = np.interp(T, x, y)
        p = p * 10 ** -3
    elif (nom == 'Cpf') | (nom == 'Cpg') | (nom == 'hfg'):
        i = label.index(nom)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = np.interp(T, x, y)
        p = p * 10 ** 3
    elif nom == 'vf':
        i = label.index(nom)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = np.interp(T, x, y)
        p = p * 10 ** -3
    elif nom == 'rhof':
        nom2 = 'vf'
        i = label.index(nom2)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = np.interp(T, x, y)
        p = 1000.0 / p
    elif nom == 'rhog':
        nom2 = 'vg'
        i = label.index(nom2)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = np.interp(T, x, y)
        p = 1000.0 / p
    elif nom == 'betaf':
        i = label.index(nom)
        y = eau[:, i]
        x = eau[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = np.interp(T, x, y)
        p = p * 10 ** -6
    return p


def propylene_glycol_prop(nom, Tk, fr):
    #
    # prop = propylene_glycol_prop(nom,T,p)
    # choix de nom  'temp' 'rho','Cp','mu','nu','k','al','Pr'
    # 		Tk = temp?rature  (temperature en Kelvin)
    #       fr : pourcentage de propylene glycol en volume  0<fr<1
    # si nom = 'temp', on donne la temp?rature de fusion , T ne sert ? rien
    # vient des tables de l'ASHRAE chapitre 21

    T = Tk - 273
    rho = np.array(
        [[-35.000000, np.nan, np.nan, np.nan, np.nan, np.nan, 1072.920000, 1079.670000, 1094.500000, 1092.460000],
         [-30.000000, np.nan, np.nan, np.nan, np.nan, np.nan, 1071.310000, 1077.820000, 1090.850000, 1088.820000],
         [-25.000000, np.nan, np.nan, np.nan, np.nan, 1062.110000, 1069.580000, 1075.840000, 1087.180000, 1085.150000],
         [-20.000000, np.nan, np.nan, np.nan, np.nan, 1060.490000, 1067.720000, 1073.740000, 1083.490000, 1081.460000],
         [-15.000000, np.nan, np.nan, np.nan, 1050.430000, 1058.730000, 1065.730000, 1071.510000, 1079.770000,
          1077.740000],
         [-10.000000, np.nan, np.nan, 1039.420000, 1048.790000, 1056.850000, 1063.610000, 1069.160000, 1076.040000,
          1074.000000],
         [-5.000000, np.nan, 1027.240000, 1037.890000, 1047.020000, 1054.840000, 1061.370000, 1066.690000, 1072.270000,
          1070.240000],
         [0.000000, 1013.850000, 1025.840000, 1036.240000, 1045.120000, 1052.710000, 1059.000000, 1064.090000,
          1068.490000, 1066.460000],
         [5.000000, 1012.610000, 1024.320000, 1034.460000, 1043.090000, 1050.440000, 1056.500000, 1061.360000,
          1064.680000, 1062.650000],
         [10.000000, 1011.240000, 1022.680000, 1032.550000, 1040.940000, 1048.040000, 1053.880000, 1058.510000,
          1060.850000, 1058.820000],
         [15.000000, 1009.750000, 1020.910000, 1030.510000, 1038.650000, 1045.520000, 1051.130000, 1055.540000,
          1057.000000, 1054.960000],
         [20.000000, 1008.130000, 1019.010000, 1028.350000, 1036.240000, 1042.870000, 1048.250000, 1052.440000,
          1053.120000, 1051.090000],
         [25.000000, 1006.400000, 1016.990000, 1026.060000, 1033.700000, 1040.090000, 1045.240000, 1049.220000,
          1049.220000, 1047.190000],
         [30.000000, 1004.540000, 1014.840000, 1023.640000, 1031.030000, 1037.180000, 1042.110000, 1045.870000,
          1045.300000, 1043.260000],
         [35.000000, 1002.560000, 1012.560000, 1021.090000, 1028.230000, 1034.150000, 1038.850000, 1042.400000,
          1041.350000, 1039.320000],
         [40.000000, 1000.460000, 1010.160000, 1018.420000, 1025.300000, 1030.980000, 1035.470000, 1038.810000,
          1037.380000, 1035.350000],
         [45.000000, 998.230000, 1007.640000, 1015.620000, 1022.240000, 1027.690000, 1031.950000, 1035.090000,
          1033.390000, 1031.350000],
         [50.000000, 995.880000, 1004.990000, 1012.690000, 1019.060000, 1024.270000, 1028.320000, 1031.250000,
          1029.370000, 1027.340000],
         [55.000000, 993.410000, 1002.210000, 1009.630000, 1015.750000, 1020.720000, 1024.550000, 1027.280000,
          1025.330000, 1023.300000],
         [60.000000, 990.820000, 999.310000, 1006.440000, 1012.300000, 1017.040000, 1020.660000, 1023.190000,
          1021.270000, 1019.240000],
         [65.000000, 988.110000, 996.280000, 1003.130000, 1008.730000, 1013.230000, 1016.630000, 1018.970000,
          1017.190000, 1015.150000],
         [70.000000, 985.270000, 993.120000, 999.690000, 1005.030000, 1009.300000, 1012.490000, 1014.630000,
          1013.080000, 1011.040000],
         [75.000000, 982.310000, 989.850000, 996.120000, 1001.210000, 1005.240000, 1008.210000, 1010.160000,
          1008.950000, 1006.910000],
         [80.000000, 979.230000, 986.440000, 992.420000, 997.250000, 1001.050000, 1003.810000, 1005.570000, 1004.790000,
          1002.760000],
         [85.000000, 976.030000, 982.900000, 988.600000, 993.170000, 996.730000, 999.280000, 1000.860000, 1000.620000,
          998.580000],
         [90.000000, 972.700000, 979.250000, 984.650000, 988.950000, 992.280000, 994.630000, 996.020000, 996.410000,
          994.380000],
         [95.000000, 969.250000, 975.470000, 980.570000, 984.610000, 987.700000, 989.850000, 991.060000, 992.190000,
          990.160000],
         [100.000000, 965.680000, 971.560000, 976.360000, 980.140000, 983.000000, 984.940000, 985.970000, 987.940000,
          985.910000],
         [105.000000, 961.990000, 967.530000, 972.030000, 975.540000, 978.160000, 979.900000, 980.760000, 983.680000,
          981.640000],
         [110.000000, 958.170000, 963.370000, 967.560000, 970.810000, 973.200000, 974.740000, 975.420000, 979.380000,
          977.350000],
         [115.000000, 954.240000, 959.090000, 962.970000, 965.950000, 968.110000, 969.450000, 969.960000, 975.070000,
          973.030000],
         [120.000000, 950.180000, 954.670000, 958.260000, 960.970000, 962.890000, 964.030000, 964.380000, 970.730000,
          968.690000],
         [125.000000, 945.990000, 950.140000, 953.410000, 955.860000, 957.550000, 958.490000, 958.670000, 966.370000,
          964.330000]])

    Cp = np.array([[-35.000000, np.nan, np.nan, np.nan, np.nan, np.nan, 3.096000, 2.843000, 2.572000, 2.264000],
                   [-30.000000, np.nan, np.nan, np.nan, np.nan, np.nan, 3.118000, 2.868000, 2.600000, 2.295000],
                   [-25.000000, np.nan, np.nan, np.nan, np.nan, 3.358000, 3.140000, 2.893000, 2.627000, 2.326000],
                   [-20.000000, np.nan, np.nan, np.nan, np.nan, 3.378000, 3.162000, 2.918000, 2.655000, 2.356000],
                   [-15.000000, np.nan, np.nan, np.nan, 3.586000, 3.397000, 3.184000, 2.943000, 2.683000, 2.387000],
                   [-10.000000, np.nan, np.nan, 3.765000, 3.603000, 3.416000, 3.206000, 2.968000, 2.710000, 2.417000],
                   [-5.000000, np.nan, 3.918000, 3.779000, 3.619000, 3.435000, 3.228000, 2.993000, 2.738000, 2.448000],
                   [0.000000, 4.042000, 3.929000, 3.793000, 3.636000, 3.455000, 3.250000, 3.018000, 2.766000, 2.478000],
                   [5.000000, 4.050000, 3.940000, 3.807000, 3.652000, 3.474000, 3.272000, 3.042000, 2.793000, 2.509000],
                   [10.000000, 4.058000, 3.951000, 3.820000, 3.669000, 3.493000, 3.295000, 3.067000, 2.821000,
                    2.539000],
                   [15.000000, 4.067000, 3.962000, 3.834000, 3.685000, 3.513000, 3.317000, 3.092000, 2.849000,
                    2.570000],
                   [20.000000, 4.075000, 3.973000, 3.848000, 3.702000, 3.532000, 3.339000, 3.117000, 2.876000,
                    2.600000],
                   [25.000000, 4.083000, 3.983000, 3.862000, 3.718000, 3.551000, 3.361000, 3.142000, 2.904000,
                    2.631000],
                   [30.000000, 4.091000, 3.994000, 3.875000, 3.735000, 3.570000, 3.383000, 3.167000, 2.931000,
                    2.661000],
                   [35.000000, 4.099000, 4.005000, 3.889000, 3.751000, 3.590000, 3.405000, 3.192000, 2.959000,
                    2.692000],
                   [40.000000, 4.107000, 4.016000, 3.903000, 3.768000, 3.609000, 3.427000, 3.217000, 2.987000,
                    2.723000],
                   [45.000000, 4.115000, 4.027000, 3.917000, 3.784000, 3.628000, 3.449000, 3.242000, 3.014000,
                    2.753000],
                   [50.000000, 4.123000, 4.038000, 3.930000, 3.801000, 3.648000, 3.471000, 3.266000, 3.042000,
                    2.784000],
                   [55.000000, 4.131000, 4.049000, 3.944000, 3.817000, 3.667000, 3.493000, 3.291000, 3.070000,
                    2.814000],
                   [60.000000, 4.139000, 4.060000, 3.958000, 3.834000, 3.686000, 3.515000, 3.316000, 3.097000,
                    2.845000],
                   [65.000000, 4.147000, 4.071000, 3.972000, 3.850000, 3.706000, 3.537000, 3.341000, 3.125000,
                    2.875000],
                   [70.000000, 4.155000, 4.082000, 3.985000, 3.867000, 3.725000, 3.559000, 3.366000, 3.153000,
                    2.906000],
                   [75.000000, 4.163000, 4.093000, 3.999000, 3.883000, 3.744000, 3.581000, 3.391000, 3.180000,
                    2.936000],
                   [80.000000, 4.171000, 4.104000, 4.013000, 3.900000, 3.763000, 3.603000, 3.416000, 3.208000,
                    2.967000],
                   [85.000000, 4.179000, 4.115000, 4.027000, 3.916000, 3.783000, 3.625000, 3.441000, 3.236000,
                    2.997000],
                   [90.000000, 4.187000, 4.126000, 4.040000, 3.933000, 3.802000, 3.647000, 3.465000, 3.263000,
                    3.028000],
                   [95.000000, 4.195000, 4.136000, 4.054000, 3.949000, 3.821000, 3.670000, 3.490000, 3.291000,
                    3.058000],
                   [100.000000, 4.203000, 4.147000, 4.068000, 3.966000, 3.841000, 3.692000, 3.515000, 3.319000,
                    3.089000],
                   [105.000000, 4.211000, 4.158000, 4.082000, 3.982000, 3.860000, 3.714000, 3.540000, 3.346000,
                    3.119000],
                   [110.000000, 4.219000, 4.169000, 4.095000, 3.999000, 3.879000, 3.736000, 3.565000, 3.374000,
                    3.150000],
                   [115.000000, 4.227000, 4.180000, 4.109000, 4.015000, 3.898000, 3.758000, 3.590000, 3.402000,
                    3.181000],
                   [120.000000, 4.235000, 4.191000, 4.123000, 4.032000, 3.918000, 3.780000, 3.615000, 3.429000,
                    3.211000],
                   [125.000000, 4.243000, 4.202000, 4.137000, 4.049000, 3.937000, 3.802000, 3.640000, 3.457000,
                    3.242000]])

    k = np.array([[-35.000000, np.nan, np.nan, np.nan, np.nan, np.nan, 0.296000, 0.275000, 0.255000, 0.237000],
                  [-30.000000, np.nan, np.nan, np.nan, np.nan, np.nan, 0.300000, 0.277000, 0.256000, 0.237000],
                  [-25.000000, np.nan, np.nan, np.nan, np.nan, 0.329000, 0.303000, 0.278000, 0.257000, 0.236000],
                  [-20.000000, np.nan, np.nan, np.nan, np.nan, 0.334000, 0.306000, 0.280000, 0.257000, 0.236000],
                  [-15.000000, np.nan, np.nan, np.nan, 0.369000, 0.338000, 0.309000, 0.282000, 0.258000, 0.236000],
                  [-10.000000, np.nan, np.nan, 0.410000, 0.375000, 0.342000, 0.312000, 0.284000, 0.259000, 0.235000],
                  [-5.000000, np.nan, 0.456000, 0.416000, 0.380000, 0.346000, 0.314000, 0.285000, 0.259000, 0.235000],
                  [0.000000, 0.510000, 0.464000, 0.423000, 0.385000, 0.349000, 0.317000, 0.286000, 0.259000, 0.234000],
                  [5.000000, 0.518000, 0.472000, 0.429000, 0.389000, 0.353000, 0.319000, 0.288000, 0.260000, 0.234000],
                  [10.000000, 0.527000, 0.479000, 0.434000, 0.394000, 0.356000, 0.321000, 0.289000, 0.260000, 0.233000],
                  [15.000000, 0.535000, 0.485000, 0.440000, 0.398000, 0.359000, 0.323000, 0.290000, 0.260000, 0.233000],
                  [20.000000, 0.543000, 0.492000, 0.445000, 0.402000, 0.362000, 0.325000, 0.291000, 0.261000, 0.232000],
                  [25.000000, 0.550000, 0.498000, 0.449000, 0.406000, 0.365000, 0.327000, 0.292000, 0.261000, 0.231000],
                  [30.000000, 0.557000, 0.503000, 0.454000, 0.409000, 0.367000, 0.329000, 0.293000, 0.261000, 0.231000],
                  [35.000000, 0.563000, 0.508000, 0.458000, 0.412000, 0.370000, 0.330000, 0.293000, 0.261000, 0.230000],
                  [40.000000, 0.569000, 0.513000, 0.462000, 0.415000, 0.372000, 0.331000, 0.294000, 0.261000, 0.229000],
                  [45.000000, 0.575000, 0.518000, 0.466000, 0.418000, 0.374000, 0.333000, 0.294000, 0.260000, 0.229000],
                  [50.000000, 0.580000, 0.522000, 0.469000, 0.420000, 0.375000, 0.334000, 0.295000, 0.260000, 0.228000],
                  [55.000000, 0.585000, 0.526000, 0.472000, 0.423000, 0.377000, 0.335000, 0.295000, 0.260000, 0.227000],
                  [60.000000, 0.589000, 0.529000, 0.475000, 0.425000, 0.378000, 0.335000, 0.295000, 0.260000, 0.227000],
                  [65.000000, 0.593000, 0.532000, 0.477000, 0.426000, 0.379000, 0.336000, 0.295000, 0.259000, 0.226000],
                  [70.000000, 0.596000, 0.535000, 0.479000, 0.428000, 0.380000, 0.336000, 0.295000, 0.259000, 0.225000],
                  [75.000000, 0.599000, 0.538000, 0.481000, 0.429000, 0.381000, 0.337000, 0.295000, 0.258000, 0.224000],
                  [80.000000, 0.602000, 0.540000, 0.482000, 0.430000, 0.382000, 0.337000, 0.295000, 0.258000, 0.223000],
                  [85.000000, 0.604000, 0.541000, 0.484000, 0.431000, 0.382000, 0.337000, 0.295000, 0.257000, 0.222000],
                  [90.000000, 0.606000, 0.543000, 0.484000, 0.431000, 0.382000, 0.337000, 0.294000, 0.256000, 0.221000],
                  [95.000000, 0.607000, 0.544000, 0.485000, 0.432000, 0.382000, 0.336000, 0.294000, 0.256000, 0.220000],
                  [100.000000, 0.608000, 0.544000, 0.485000, 0.432000, 0.382000, 0.336000, 0.293000, 0.255000,
                   0.219000],
                  [105.000000, 0.609000, 0.544000, 0.485000, 0.432000, 0.382000, 0.335000, 0.292000, 0.254000,
                   0.218000],
                  [110.000000, 0.609000, 0.544000, 0.485000, 0.431000, 0.381000, 0.335000, 0.292000, 0.253000,
                   0.217000],
                  [115.000000, 0.608000, 0.544000, 0.485000, 0.430000, 0.380000, 0.334000, 0.291000, 0.252000,
                   0.216000],
                  [120.000000, 0.608000, 0.543000, 0.484000, 0.429000, 0.379000, 0.333000, 0.290000, 0.251000,
                   0.215000],
                  [125.000000, 0.606000, 0.542000, 0.482000, 0.428000, 0.378000, 0.332000, 0.288000, 0.250000,
                   0.214000]])

    mu = np.array(
        [[-35.000000, np.nan, np.nan, np.nan, np.nan, np.nan, 524.010000, 916.180000, 1434.220000, 3813.290000],
         [-30.000000, np.nan, np.nan, np.nan, np.nan, np.nan, 330.390000, 551.120000, 908.470000, 2071.340000],
         [-25.000000, np.nan, np.nan, np.nan, np.nan, 110.590000, 211.430000, 340.090000, 575.920000, 1176.090000],
         [-20.000000, np.nan, np.nan, np.nan, np.nan, 73.030000, 137.960000, 215.670000, 368.770000, 696.090000],
         [-15.000000, np.nan, np.nan, np.nan, 33.220000, 49.700000, 92.000000, 140.620000, 239.860000, 428.190000],
         [-10.000000, np.nan, np.nan, 11.870000, 23.270000, 34.780000, 62.780000, 94.230000, 159.020000, 272.940000],
         [-5.000000, np.nan, 4.980000, 9.080000, 16.750000, 24.990000, 43.840000, 64.830000, 107.640000, 179.780000],
         [0.000000, 2.680000, 4.050000, 7.080000, 12.370000, 18.400000, 31.320000, 45.740000, 74.450000, 122.030000],
         [5.000000, 2.230000, 3.340000, 5.610000, 9.350000, 13.850000, 22.870000, 33.040000, 52.630000, 85.150000],
         [10.000000, 1.890000, 2.790000, 4.520000, 7.220000, 10.650000, 17.050000, 24.410000, 37.990000, 60.930000],
         [15.000000, 1.630000, 2.360000, 3.690000, 5.690000, 8.340000, 12.960000, 18.410000, 28.000000, 44.620000],
         [20.000000, 1.420000, 2.020000, 3.060000, 4.570000, 6.650000, 10.040000, 14.150000, 21.040000, 33.380000],
         [25.000000, 1.250000, 1.740000, 2.570000, 3.730000, 5.390000, 7.910000, 11.080000, 16.100000, 25.450000],
         [30.000000, 1.110000, 1.520000, 2.180000, 3.090000, 4.430000, 6.340000, 8.810000, 12.550000, 19.760000],
         [35.000000, 0.990000, 1.340000, 1.880000, 2.600000, 3.690000, 5.150000, 7.120000, 9.940000, 15.600000],
         [40.000000, 0.890000, 1.180000, 1.630000, 2.210000, 3.110000, 4.250000, 5.840000, 7.990000, 12.490000],
         [45.000000, 0.810000, 1.060000, 1.430000, 1.910000, 2.650000, 3.550000, 4.850000, 6.520000, 10.150000],
         [50.000000, 0.730000, 0.950000, 1.260000, 1.660000, 2.290000, 3.000000, 4.080000, 5.390000, 8.350000],
         [55.000000, 0.670000, 0.860000, 1.130000, 1.470000, 1.990000, 2.570000, 3.460000, 4.510000, 6.950000],
         [60.000000, 0.620000, 0.780000, 1.010000, 1.300000, 1.750000, 2.220000, 2.980000, 3.820000, 5.850000],
         [65.000000, 0.570000, 0.710000, 0.910000, 1.170000, 1.550000, 1.930000, 2.580000, 3.280000, 4.970000],
         [70.000000, 0.530000, 0.660000, 0.830000, 1.060000, 1.380000, 1.700000, 2.260000, 2.830000, 4.260000],
         [75.000000, 0.490000, 0.600000, 0.760000, 0.960000, 1.240000, 1.510000, 1.990000, 2.470000, 3.690000],
         [80.000000, 0.460000, 0.560000, 0.700000, 0.880000, 1.120000, 1.350000, 1.770000, 2.180000, 3.220000],
         [85.000000, 0.430000, 0.520000, 0.650000, 0.810000, 1.020000, 1.220000, 1.590000, 1.940000, 2.830000],
         [90.000000, 0.400000, 0.490000, 0.610000, 0.750000, 0.930000, 1.100000, 1.430000, 1.730000, 2.500000],
         [95.000000, 0.380000, 0.450000, 0.570000, 0.700000, 0.860000, 1.010000, 1.300000, 1.560000, 2.230000],
         [100.000000, 0.350000, 0.430000, 0.530000, 0.660000, 0.790000, 0.920000, 1.180000, 1.420000, 2.000000],
         [105.000000, 0.330000, 0.400000, 0.500000, 0.620000, 0.740000, 0.850000, 1.080000, 1.290000, 1.800000],
         [110.000000, 0.320000, 0.380000, 0.470000, 0.590000, 0.690000, 79.000000, 1.000000, 1.190000, 1.630000],
         [115.000000, 0.300000, 0.360000, 0.450000, 0.560000, 0.640000, 0.740000, 0.930000, 1.090000, 1.480000],
         [120.000000, 0.280000, 0.340000, 0.430000, 0.530000, 0.600000, 0.690000, 0.860000, 1.020000, 1.350000],
         [125.000000, 0.270000, 0.320000, 0.410000, 0.510000, 0.570000, 0.650000, 0.800000, 0.950000, 1.240000]])

    y = np.arange(0.1, 1, 0.1)
    if nom == 'temp':
        xV = np.array([0, 4.8, 9.6, 14.5, 19.4, 24.4, 29.4, 34.4, 39.6, 44.7, 49.9, 55, 60])
        Tfu = np.array([0, -1.6, -3, -5.1, -8, -9.6, -14, -16.4, -22, -26.7, -34, -41.6, -48])
        pTT = np.polyfit(xV, Tfu, 3)
        p = np.polyval(pTT, 100 * fr)
    elif nom == 'mu':
        z = mu[:, 1:11]
        x = mu[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = mon_interp2(x, y, z, T, fr)
        p = p * 10 ** -3
    elif nom == 'k':
        z = k[:, 1:11]
        x = k[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = mon_interp2(x, y, z, T, fr)
    elif nom == 'rho':
        z = rho[:, 1:11]
        x = rho[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = mon_interp2(x, y, z, T, fr)
    elif nom == 'Cp':
        z = Cp[:, 1:11]
        x = Cp[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = mon_interp2(x, y, z, T, fr)
        p = p * 10 ** 3
    elif nom == 'nu':
        z = mu[:, 1:11]
        x = mu[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = mon_interp2(x, y, z, T, fr)
        p1 = p1 * 10 ** -3
        z = rho[:, 1:11]
        x = rho[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p2 = mon_interp2(x, y, z, T, fr)
        p = p1 / p2
    elif nom == 'Pr':
        z = mu[:, 1:11]
        x = mu[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = mon_interp2(x, y, z, T, fr)
        p1 = p1 * 10 ** -3
        z = Cp[:, 1:11]
        x = Cp[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p2 = mon_interp2(x, y, z, T, fr)
        p2 = p2 * 10 ** 3
        z = k[:, 1:11]
        x = k[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p3 = mon_interp2(x, y, z, T, fr)
        p = p1 * p2 / p3
    elif nom == 'al':
        z = k[:, 1:11]
        x = k[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = mon_interp2(x, y, z, T, fr)
        p1 = p1
        z = Cp[:, 1:11]
        x = Cp[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p2 = mon_interp2(x, y, z, T, fr)
        p2 = p2 * 10 ** 3
        z = rho[:, 1:11]
        x = rho[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p3 = mon_interp2(x, y, z, T, fr)
        p = p1 / (p2 * p3)
    return p


def mass_fr(vl_fr, Tref, fluide):
    rhoe = eau_prop('rhof', Tref)
    rhoe = 1000.0
    if fluide == 'prop_glycol':
        rho = propylene_glycol_prop('rho', Tref, vl_fr)
    else:
        rho = ethylene_glycol_prop('rho', Tref, vl_fr)
    y = 1.0 + (vl_fr - 1.0) * rhoe / rho
    return y


def vol_fr(mas_fr, Tref, fluide):
    def fct(z):
        y = mas_fr - mass_fr(z, Tref, fluide)
        return y

    x = newton(fct, 0.9 * mas_fr)
    return x


def Psat(Tk):
    # Calcul la pression de saturation de l'eau
    # Tk est donne en Kelvin
    T = Tk - 273.15
    p = 6.11 * 10 ** (7.5 * T / (237.3 + T))
    p = p * 100.0
    return p


def ethylene_glycol_prop(nom, Tk, fr):
    # prop = ethylene_glycol_prop(nom,T,p)
    # choix de nom  'temp' 'rho','Cp','mu','nu','k','al','Pr'
    # Tk = temp?rature  (temperature en Kelvin)
    # fr = pourcentage de propylene glycol en volume  0<fr<1
    # si nom = 'temp', on donne la température de fusion , T ne sert à rien
    # vient des tables de l'ASHRAE chapitre 21

    T = Tk - 273
    rho = np.array(
        [[-35.000000, np.nan, np.nan, np.nan, np.nan, 1089.940000, 1104.600000, 1118.610000, 1132.110000, np.nan],
         [-30.000000, np.nan, np.nan, np.nan, np.nan, 1089.040000, 1103.540000, 1117.380000, 1130.720000, np.nan],
         [-25.000000, np.nan, np.nan, np.nan, np.nan, 1088.010000, 1102.360000, 1116.040000, 1129.210000, 1141.870000],
         [-20.000000, np.nan, np.nan, np.nan, 1071.980000, 1086.870000, 1101.060000, 1114.580000, 1127.570000,
          1140.070000],
         [-15.000000, np.nan, np.nan, np.nan, 1070.870000, 1085.610000, 1099.640000, 1112.990000, 1125.820000,
          1138.140000],
         [-10.000000, np.nan, np.nan, 1054.310000, 1069.630000, 1084.220000, 1098.090000, 1111.280000, 1123.940000,
          1136.090000],
         [-5.000000, np.nan, 1036.850000, 1053.110000, 1068.280000, 1082.710000, 1096.430000, 1109.450000, 1121.940000,
          1133.910000],
         [0.000000, 1018.730000, 1035.670000, 1051.780000, 1066.800000, 1081.080000, 1094.640000, 1107.500000,
          1119.820000, 1131.620000],
         [5.000000, 1017.570000, 1034.360000, 1050.330000, 1065.210000, 1079.330000, 1092.730000, 1105.430000,
          1117.580000, 1129.200000],
         [10.000000, 1016.280000, 1032.940000, 1048.760000, 1063.490000, 1077.460000, 1090.700000, 1103.230000,
          1115.220000, 1126.670000],
         [15.000000, 1014.870000, 1031.390000, 1047.070000, 1061.650000, 1075.460000, 1088.540000, 1100.920000,
          1112.730000, 1124.010000],
         [20.000000, 1013.340000, 1029.720000, 1045.250000, 1059.680000, 1073.350000, 1086.270000, 1098.480000,
          1110.130000, 1121.230000],
         [25.000000, 1011.690000, 1027.930000, 1043.320000, 1057.600000, 1071.110000, 1083.870000, 1095.920000,
          1107.400000, 1118.320000],
         [30.000000, 1009.920000, 1026.020000, 1041.260000, 1055.390000, 1068.750000, 1081.350000, 1093.240000,
          1104.550000, 1115.300000],
         [35.000000, 1008.020000, 1023.990000, 1039.080000, 1053.070000, 1066.270000, 1078.710000, 1090.430000,
          1101.580000, 1112.150000],
         [40.000000, 1006.010000, 1021.830000, 1036.780000, 1050.620000, 1063.660000, 1075.950000, 1087.510000,
          1098.480000, 1108.890000],
         [45.000000, 1003.870000, 1019.550000, 1034.360000, 1048.050000, 1060.940000, 1073.070000, 1084.460000,
          1095.270000, 1105.500000],
         [50.000000, 1001.610000, 1017.160000, 1031.810000, 1045.350000, 1058.090000, 1070.060000, 1081.300000,
          1091.930000, 1101.990000],
         [55.000000, 999.230000, 1014.640000, 1029.150000, 1042.540000, 1055.130000, 1066.940000, 1078.010000,
          1088.480000, 1098.360000],
         [60.000000, 996.720000, 1011.990000, 1026.360000, 1039.610000, 1052.040000, 1063.690000, 1074.600000,
          1084.900000, 1094.600000],
         [65.000000, 994.100000, 1009.230000, 1023.450000, 1036.550000, 1048.830000, 1060.320000, 1071.060000,
          1081.200000, 1090.730000],
         [70.000000, 991.350000, 1006.350000, 1020.420000, 1033.370000, 1045.490000, 1056.830000, 1067.410000,
          1077.370000, 1086.730000],
         [75.000000, 988.490000, 1003.340000, 1017.270000, 1030.070000, 1042.040000, 1053.220000, 1063.640000,
          1073.430000, 1082.610000],
         [80.000000, 985.500000, 1000.210000, 1014.000000, 1026.650000, 1038.460000, 1049.480000, 1059.740000,
          1069.360000, 1078.370000],
         [85.000000, 982.390000, 996.960000, 1010.600000, 1023.100000, 1034.770000, 1045.630000, 1055.720000,
          1065.180000, 1074.010000],
         [90.000000, 979.150000, 993.590000, 1007.090000, 1019.440000, 1030.950000, 1041.650000, 1051.580000,
          1060.870000, 1069.530000],
         [95.000000, 975.800000, 990.100000, 1003.450000, 1015.650000, 1027.010000, 1037.550000, 1047.320000,
          1056.440000, 1064.920000],
         [100.000000, 972.320000, 986.480000, 999.690000, 1011.740000, 1022.950000, 1033.330000, 1042.930000,
          1051.880000, 1060.200000],
         [105.000000, 968.730000, 982.750000, 995.810000, 1007.710000, 1018.760000, 1028.990000, 1038.430000,
          1047.210000, 1055.350000],
         [110.000000, 965.010000, 978.890000, 991.810000, 1003.560000, 1014.460000, 1024.520000, 1033.800000,
          1042.410000, 1050.380000],
         [115.000000, 961.170000, 974.910000, 987.680000, 999.290000, 1010.030000, 1019.940000, 1029.050000,
          1037.500000, 1045.290000],
         [120.000000, 957.210000, 970.810000, 983.430000, 994.900000, 1005.480000, 1015.230000, 1024.180000,
          1032.460000, 1040.080000],
         [125.000000, 953.120000, 966.590000, 979.070000, 990.380000, 1000.810000, 1010.400000, 1019.190000,
          1027.300000, 1034.740000]])

    Cp = np.array([[-35.000000, np.nan, np.nan, np.nan, np.nan, 3.068000, 2.844000, 2.612000, 2.370000, np.nan],
                   [-30.000000, np.nan, np.nan, np.nan, np.nan, 3.088000, 2.866000, 2.636000, 2.397000, np.nan],
                   [-25.000000, np.nan, np.nan, np.nan, np.nan, 3.107000, 2.888000, 2.660000, 2.423000, 2.177000],
                   [-20.000000, np.nan, np.nan, np.nan, 3.334000, 3.126000, 2.909000, 2.685000, 2.450000, 2.206000],
                   [-15.000000, np.nan, np.nan, np.nan, 3.351000, 3.145000, 2.931000, 2.709000, 2.477000, 2.235000],
                   [-10.000000, np.nan, np.nan, 3.560000, 3.367000, 3.165000, 2.953000, 2.733000, 2.503000, 2.264000],
                   [-5.000000, np.nan, 3.757000, 3.574000, 3.384000, 3.184000, 2.975000, 2.757000, 2.530000, 2.293000],
                   [0.000000, 3.937000, 3.769000, 3.589000, 3.401000, 3.203000, 2.997000, 2.782000, 2.556000, 2.322000],
                   [5.000000, 3.946000, 3.780000, 3.603000, 3.418000, 3.223000, 3.018000, 2.806000, 2.583000, 2.351000],
                   [10.000000, 3.954000, 3.792000, 3.617000, 3.435000, 3.242000, 3.040000, 2.830000, 2.610000,
                    2.380000],
                   [15.000000, 3.963000, 3.803000, 3.631000, 3.451000, 3.261000, 3.062000, 2.854000, 2.636000,
                    2.409000],
                   [20.000000, 3.972000, 3.815000, 3.645000, 3.468000, 3.281000, 3.084000, 2.878000, 2.663000,
                    2.438000],
                   [25.000000, 3.981000, 3.826000, 3.660000, 3.485000, 3.300000, 3.106000, 2.903000, 2.690000,
                    2.467000],
                   [30.000000, 3.989000, 3.838000, 3.674000, 3.502000, 3.319000, 3.127000, 2.927000, 2.716000,
                    2.496000],
                   [35.000000, 3.998000, 3.849000, 3.688000, 3.518000, 3.339000, 3.149000, 2.951000, 2.743000,
                    2.525000],
                   [40.000000, 4.007000, 3.861000, 3.702000, 3.535000, 3.358000, 3.171000, 2.975000, 2.770000,
                    2.554000],
                   [45.000000, 4.015000, 3.872000, 3.716000, 3.552000, 3.377000, 3.193000, 3.000000, 2.796000,
                    2.583000],
                   [50.000000, 4.024000, 3.884000, 3.730000, 3.569000, 3.396000, 3.215000, 3.024000, 2.823000,
                    2.612000],
                   [55.000000, 4.033000, 3.895000, 3.745000, 3.585000, 3.416000, 3.236000, 3.048000, 2.850000,
                    2.641000],
                   [60.000000, 4.042000, 3.907000, 3.759000, 3.602000, 3.435000, 3.258000, 3.072000, 2.876000,
                    2.670000],
                   [65.000000, 4.050000, 3.918000, 3.773000, 3.619000, 3.454000, 3.280000, 3.097000, 2.903000,
                    2.699000],
                   [70.000000, 4.059000, 3.930000, 3.787000, 3.636000, 3.474000, 3.302000, 3.121000, 2.929000,
                    2.728000],
                   [75.000000, 4.068000, 3.941000, 3.801000, 3.653000, 3.493000, 3.324000, 3.145000, 2.956000,
                    2.757000],
                   [80.000000, 4.077000, 3.953000, 3.816000, 3.669000, 3.512000, 3.345000, 3.169000, 2.983000,
                    2.786000],
                   [85.000000, 4.085000, 3.964000, 3.830000, 3.686000, 3.532000, 3.367000, 3.193000, 3.009000,
                    2.815000],
                   [90.000000, 4.094000, 3.976000, 3.844000, 3.703000, 3.551000, 3.389000, 3.218000, 3.036000,
                    2.844000],
                   [95.000000, 4.103000, 3.987000, 3.858000, 3.720000, 3.570000, 3.411000, 3.242000, 3.063000,
                    2.873000],
                   [100.000000, 4.112000, 3.999000, 3.872000, 3.736000, 3.590000, 3.433000, 3.266000, 3.089000,
                    2.902000],
                   [105.000000, 4.120000, 4.010000, 3.886000, 3.753000, 3.609000, 3.454000, 3.290000, 3.116000,
                    2.931000],
                   [110.000000, 4.129000, 4.022000, 3.901000, 3.770000, 3.628000, 3.476000, 3.315000, 3.143000,
                    2.960000],
                   [115.000000, 4.138000, 4.033000, 3.915000, 3.787000, 3.647000, 3.498000, 3.339000, 3.169000,
                    2.989000],
                   [120.000000, 4.147000, 4.045000, 3.929000, 3.804000, 3.667000, 3.520000, 3.363000, 3.196000,
                    3.018000],
                   [125.000000, 4.155000, 4.056000, 3.943000, 3.820000, 3.686000, 3.542000, 3.387000, 3.223000,
                    3.047000]])

    k = np.array([[-35.000000, np.nan, np.nan, np.nan, np.nan, 0.328000, 0.307000, 0.289000, 0.274000, np.nan],
                  [-30.000000, np.nan, np.nan, np.nan, np.nan, 0.333000, 0.312000, 0.293000, 0.276000, np.nan],
                  [-25.000000, np.nan, np.nan, np.nan, np.nan, 0.339000, 0.316000, 0.296000, 0.279000, 0.263000],
                  [-20.000000, np.nan, np.nan, np.nan, 0.371000, 0.344000, 0.321000, 0.300000, 0.281000, 0.265000],
                  [-15.000000, np.nan, np.nan, np.nan, 0.377000, 0.349000, 0.325000, 0.303000, 0.283000, 0.266000],
                  [-10.000000, np.nan, np.nan, 0.415000, 0.383000, 0.354000, 0.329000, 0.306000, 0.286000, 0.268000],
                  [-5.000000, np.nan, 0.460000, 0.422000, 0.389000, 0.359000, 0.333000, 0.309000, 0.288000, 0.269000],
                  [0.000000, 0.511000, 0.468000, 0.429000, 0.395000, 0.364000, 0.336000, 0.312000, 0.290000, 0.271000],
                  [5.000000, 0.520000, 0.476000, 0.436000, 0.400000, 0.368000, 0.340000, 0.314000, 0.292000, 0.272000],
                  [10.000000, 0.528000, 0.483000, 0.442000, 0.405000, 0.373000, 0.343000, 0.317000, 0.294000, 0.274000],
                  [15.000000, 0.537000, 0.490000, 0.448000, 0.410000, 0.377000, 0.346000, 0.320000, 0.296000, 0.275000],
                  [20.000000, 0.545000, 0.497000, 0.453000, 0.415000, 0.380000, 0.349000, 0.322000, 0.298000, 0.276000],
                  [25.000000, 0.552000, 0.503000, 0.459000, 0.419000, 0.384000, 0.352000, 0.324000, 0.299000, 0.278000],
                  [30.000000, 0.559000, 0.509000, 0.464000, 0.424000, 0.387000, 0.355000, 0.327000, 0.301000, 0.279000],
                  [35.000000, 0.566000, 0.515000, 0.469000, 0.428000, 0.391000, 0.358000, 0.329000, 0.303000, 0.280000],
                  [40.000000, 0.572000, 0.520000, 0.473000, 0.431000, 0.394000, 0.360000, 0.331000, 0.304000, 0.281000],
                  [45.000000, 0.577000, 0.525000, 0.477000, 0.435000, 0.397000, 0.363000, 0.332000, 0.306000, 0.282000],
                  [50.000000, 0.583000, 0.529000, 0.481000, 0.438000, 0.399000, 0.365000, 0.334000, 0.307000, 0.283000],
                  [55.000000, 0.588000, 0.534000, 0.485000, 0.441000, 0.402000, 0.367000, 0.336000, 0.308000, 0.284000],
                  [60.000000, 0.592000, 0.538000, 0.488000, 0.444000, 0.404000, 0.369000, 0.337000, 0.310000, 0.285000],
                  [65.000000, 0.596000, 0.541000, 0.491000, 0.446000, 0.406000, 0.371000, 0.339000, 0.311000, 0.286000],
                  [70.000000, 0.600000, 0.544000, 0.494000, 0.449000, 0.408000, 0.372000, 0.340000, 0.312000, 0.287000],
                  [75.000000, 0.603000, 0.547000, 0.496000, 0.451000, 0.410000, 0.374000, 0.341000, 0.313000, 0.288000],
                  [80.000000, 0.606000, 0.549000, 0.498000, 0.452000, 0.411000, 0.375000, 0.342000, 0.314000, 0.288000],
                  [85.000000, 0.608000, 0.551000, 0.500000, 0.454000, 0.413000, 0.376000, 0.343000, 0.314000, 0.289000],
                  [90.000000, 0.610000, 0.553000, 0.501000, 0.455000, 0.414000, 0.377000, 0.344000, 0.315000, 0.290000],
                  [95.000000, 0.612000, 0.555000, 0.503000, 0.456000, 0.415000, 0.378000, 0.345000, 0.316000, 0.290000],
                  [100.000000, 0.613000, 0.556000, 0.504000, 0.457000, 0.416000, 0.379000, 0.346000, 0.316000,
                   0.291000],
                  [105.000000, 0.614000, 0.556000, 0.504000, 0.458000, 0.416000, 0.379000, 0.346000, 0.317000,
                   0.291000],
                  [110.000000, 0.614000, 0.557000, 0.505000, 0.458000, 0.417000, 0.380000, 0.347000, 0.317000,
                   0.292000],
                  [115.000000, 0.614000, 0.557000, 0.505000, 0.458000, 0.417000, 0.380000, 0.347000, 0.318000,
                   0.292000],
                  [120.000000, 0.613000, 0.556000, 0.504000, 0.458000, 0.417000, 0.380000, 0.347000, 0.318000,
                   0.293000],
                  [125.000000, 0.612000, 0.555000, 0.504000, 0.458000, 0.417000, 0.380000, 0.347000, 0.318000,
                   0.293000]])

    mu = np.array([[-35.000000, np.nan, np.nan, np.nan, np.nan, 66.930000, 93.440000, 133.530000, 191.090000, np.nan],
                   [-30.000000, np.nan, np.nan, np.nan, np.nan, 43.980000, 65.250000, 96.570000, 141.020000, np.nan],
                   [-25.000000, np.nan, np.nan, np.nan, np.nan, 30.500000, 46.750000, 70.380000, 102.210000,
                    196.870000],
                   [-20.000000, np.nan, np.nan, np.nan, 15.750000, 22.070000, 34.280000, 51.940000, 74.530000,
                    128.430000],
                   [-15.000000, np.nan, np.nan, np.nan, 11.740000, 16.530000, 25.690000, 38.880000, 55.090000,
                    87.520000],
                   [-10.000000, np.nan, np.nan, 6.190000, 9.060000, 12.740000, 19.620000, 29.530000, 41.360000,
                    61.850000],
                   [-5.000000, np.nan, 3.650000, 5.030000, 7.180000, 10.050000, 15.250000, 22.760000, 31.560000,
                    45.080000],
                   [0.000000, 2.080000, 3.020000, 4.150000, 5.830000, 8.090000, 12.050000, 17.790000, 24.440000,
                    33.740000],
                   [5.000000, 1.790000, 2.540000, 3.480000, 4.820000, 6.630000, 9.660000, 14.090000, 19.200000,
                    25.840000],
                   [10.000000, 1.560000, 2.180000, 2.950000, 4.040000, 5.500000, 7.850000, 11.310000, 15.290000,
                    20.180000],
                   [15.000000, 1.370000, 1.890000, 2.530000, 3.440000, 4.630000, 6.460000, 9.180000, 12.330000,
                    16.040000],
                   [20.000000, 1.210000, 1.650000, 2.200000, 2.960000, 3.940000, 5.380000, 7.530000, 10.050000,
                    12.950000],
                   [25.000000, 1.080000, 1.460000, 1.920000, 2.570000, 3.390000, 4.520000, 6.240000, 8.290000,
                    10.590000],
                   [30.000000, 0.970000, 1.300000, 1.690000, 2.260000, 2.940000, 3.840000, 5.230000, 6.900000,
                    8.770000],
                   [35.000000, 0.880000, 1.170000, 1.500000, 1.990000, 2.560000, 3.290000, 4.420000, 5.790000,
                    7.340000],
                   [40.000000, 0.800000, 1.060000, 1.340000, 1.770000, 2.260000, 2.840000, 3.760000, 4.910000,
                    6.210000],
                   [45.000000, 0.730000, 0.960000, 1.210000, 1.590000, 2.000000, 2.470000, 3.230000, 4.190000,
                    5.300000],
                   [50.000000, 0.670000, 0.880000, 1.090000, 1.430000, 1.780000, 2.160000, 2.800000, 3.610000,
                    4.560000],
                   [55.000000, 0.620000, 0.810000, 0.990000, 1.290000, 1.590000, 1.910000, 2.430000, 3.120000,
                    3.950000],
                   [60.000000, 0.570000, 0.740000, 0.900000, 1.170000, 1.430000, 1.690000, 2.130000, 2.720000,
                    3.450000],
                   [65.000000, 0.530000, 0.690000, 0.830000, 1.060000, 1.290000, 1.510000, 1.880000, 2.390000,
                    3.030000],
                   [70.000000, 0.500000, 0.640000, 0.760000, 0.970000, 1.170000, 1.350000, 1.670000, 2.110000,
                    2.670000],
                   [75.000000, 0.470000, 0.590000, 0.700000, 0.890000, 1.070000, 1.220000, 1.490000, 1.870000,
                    2.370000],
                   [80.000000, 0.440000, 0.550000, 0.650000, 0.820000, 0.980000, 1.100000, 1.330000, 1.660000,
                    2.120000],
                   [85.000000, 0.410000, 0.520000, 0.600000, 0.760000, 0.890000, 1.000000, 1.200000, 1.490000,
                    1.900000],
                   [90.000000, 0.390000, 0.490000, 0.560000, 0.700000, 0.820000, 0.920000, 1.090000, 1.340000,
                    1.710000],
                   [95.000000, 0.370000, 0.460000, 0.520000, 0.650000, 0.760000, 0.840000, 0.990000, 1.210000,
                    1.540000],
                   [100.000000, 0.350000, 0.430000, 0.490000, 0.600000, 0.700000, 0.770000, 0.900000, 1.100000,
                    1.400000],
                   [105.000000, 0.330000, 0.400000, 0.460000, 0.560000, 0.650000, 0.710000, 0.820000, 1.000000,
                    1.270000],
                   [110.000000, 0.320000, 0.380000, 0.430000, 0.530000, 0.600000, 0.660000, 0.760000, 0.910000,
                    1.160000],
                   [115.000000, 0.300000, 0.360000, 0.410000, 0.490000, 0.560000, 0.610000, 0.700000, 0.830000,
                    1.070000],
                   [120.000000, 0.290000, 0.340000, 0.380000, 0.460000, 0.530000, 0.570000, 0.640000, 0.770000,
                    0.980000],
                   [125.000000, 0.280000, 0.330000, 0.360000, 0.430000, 0.490000, 0.530000, 0.600000, 0.710000,
                    0.900000]])

    y = np.arange(0.1, 1, 0.1)
    if nom == 'temp':
        xV = np.array([0, 4.4, 8.9, 13.6, 18.1, 22.9, 27.7, 32.6, 37.5, 42.5, 47.6, 52.7, 57.8])
        Tfu = np.array([0, -1.4, -3.2, -5.4, -7.8, -10.7, -14.1, -17.9, -22.3, -27.5, -33.8, -41.1, -48.3])
        pTT = np.polyfit(xV, Tfu, 3)
        p = np.polyval(pTT, 100 * fr)
    elif nom == 'mu':
        z = mu[:, 1:11]
        x = mu[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = mon_interp2(x, y, z, T, fr)
        p = p * 10 ** -3
    elif nom == 'k':
        z = k[:, 1:11]
        x = k[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = mon_interp2(x, y, z, T, fr)
    elif nom == 'rho':
        z = rho[:, 1:11]
        x = rho[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = mon_interp2(x, y, z, T, fr)
    elif nom == 'Cp':
        z = Cp[:, 1:11]
        x = Cp[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p = mon_interp2(x, y, z, T, fr)
        p = p * 10 ** 3
    elif nom == 'nu':
        z = mu[:, 1:11]
        x = mu[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = mon_interp2(x, y, z, T, fr)
        p1 = p1 * 10 ** -3
        z = rho[:, 1:11]
        x = rho[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p2 = mon_interp2(x, y, z, T, fr)
        p = p1 / p2
    elif nom == 'Pr':
        z = mu[:, 1:11]
        x = mu[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = mon_interp2(x, y, z, T, fr)
        p1 = p1 * 10 ** -3
        z = Cp[:, 1:11]
        x = Cp[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p2 = mon_interp2(x, y, z, T, fr)
        p2 = p2 * 10 ** 3
        z = k[:, 1:11]
        x = k[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p3 = mon_interp2(x, y, z, T, fr)
        p = p1 * p2 / p3
    elif nom == 'al':
        z = k[:, 1:11]
        x = k[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p1 = mon_interp2(x, y, z, T, fr)
        p1 = p1
        z = Cp[:, 1:11]
        x = Cp[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p2 = mon_interp2(x, y, z, T, fr)
        p2 = p2 * 10 ** 3
        z = rho[:, 1:11]
        x = rho[:, 0]
        Tmin = x[0]
        Tmax = x[x.size - 1]
        if T < Tmin or T > Tmax:
            print('Warning : La valeur de T est en dehors de la table : extrapolation !')
        p3 = mon_interp2(x, y, z, T, fr)
        p = p1 / (p2 * p3)
    return p
